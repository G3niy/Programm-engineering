"""init_tester

Revision ID: 40ca838a9780
Revises: 2731a1bb990e
Create Date: 2025-03-10 23:04:54.578571

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '40ca838a9780'
down_revision: Union[str, None] = '2731a1bb990e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('contract',
    sa.Column('con_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('con_name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('create_date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('con_id')
    )
    op.create_table('contract_document',
    sa.Column('con_doc_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('contract_id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('date_bind', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['contract_id'], ['contract.con_id'], ),
    sa.ForeignKeyConstraint(['document_id'], ['documents.doc_id'], ),
    sa.PrimaryKeyConstraint('con_doc_id')
    )
    op.drop_table('contract_documents')
    op.drop_table('contracts')
    op.add_column('documents', sa.Column('user_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'documents', 'users', ['user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'documents', type_='foreignkey')
    op.drop_column('documents', 'user_id')
    op.create_table('contracts',
    sa.Column('doc_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('file_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('file_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('create_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('doc_id', name='contracts_pkey')
    )
    op.create_table('contract_documents',
    sa.Column('con_doc_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('contract_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('document_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['contract_id'], ['documents.doc_id'], name='contract_documents_contract_id_fkey'),
    sa.ForeignKeyConstraint(['document_id'], ['documents.doc_id'], name='contract_documents_document_id_fkey'),
    sa.PrimaryKeyConstraint('con_doc_id', name='contract_documents_pkey')
    )
    op.drop_table('contract_document')
    op.drop_table('contract')
    # ### end Alembic commands ###
